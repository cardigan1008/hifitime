# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import typing
from enum import Enum, auto

class DurationError:
    def __new__(cls,* _args,* * _kwargs): ...
    ...

class Epoch:
    r"""
    Defines a nanosecond-precision Epoch.
    
    Refer to the appropriate functions for initializing this Epoch from different time scales or representations.
    """
    ...

class HifitimeError:
    def __new__(cls,* _args,* * _kwargs): ...
    ...

class LatestLeapSeconds:
    r"""
    List of leap seconds from https://www.ietf.org/timezones/data/leap-seconds.list .
    This list corresponds the number of seconds in TAI to the UTC offset and to whether it was an announced leap second or not.
    The unannoucned leap seconds come from dat.c in the SOFA library.
    """
    def __new__(cls,): ...
    def __repr__(self) -> str:
        ...


class LeapSecond:
    r"""
    A structure representing a leap second
    """
    ...

class LeapSecondsFile:
    r"""
    A leap second provider that uses an IERS formatted leap seconds file.
    """
    def __new__(cls,path:str): ...
    def __repr__(self) -> str:
        ...


class ParsingError:
    def __new__(cls,* _args,* * _kwargs): ...
    ...

class TimeSeries:
    r"""
    An iterator of a sequence of evenly spaced Epochs.
    """
    ...

class Ut1Provider:
    r"""
    A structure storing all of the TAI-UT1 data
    """
    def __new__(cls,): ...
    def __repr__(self) -> str:
        ...


class TimeScale(Enum):
    r"""
    Enum of the different time systems available
    """
    TAI = auto()
    TT = auto()
    ET = auto()
    TDB = auto()
    UTC = auto()
    GPST = auto()
    GST = auto()
    BDT = auto()
    QZSST = auto()

